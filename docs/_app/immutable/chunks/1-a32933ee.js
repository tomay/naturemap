import{S as qe,i as Ae,s as Pe,K as ue,w as Ie,x as $e,y as Ge,L as Le,M as Ce,f as Re,t as We,z as He,N as Ee,k as f,q as n,a as h,l as p,m as u,r,h as t,c as m,n as j,b as l,D as a,B as Te}from"./index-edd1e24c.js";import{P as Ue}from"./post-3bc143e6.js";function Be(S){let i,d,v,b,s,c,w,M,x,N,Q,L,z,J,R,C,X,W,_,$,Z,ee,G,te,H,E,oe,T,k,le,U,q,ie,B,y,ae,g,se,ne,O,A,re,D,P,fe,F,I,pe;return{c(){i=f("h3"),d=n("Reflow"),v=h(),b=f("p"),s=n("I recently became aware of two WCAG Guidelines that sound similar, but are fundamentally different (and, to different degrees, challenging to achieve)."),c=h(),w=f("p"),M=n("The first of these is the "),x=f("a"),N=n("\u201CReflow\u201D"),Q=n(" requirement, namely that \u201Ccontent can be enlarged without increasing line length.\u201D"),L=h(),z=f("p"),J=n("You might be wondering, as I did, what does that even mean?"),R=h(),C=f("p"),X=n("Perhaps the following criteria might help (or not):"),W=h(),_=f("ul"),$=f("li"),Z=n("Vertical scrolling content at a width equivalent to 320 CSS pixels"),ee=h(),G=f("li"),te=n("Horizontal scrolling content at a height equivalent to 256 CSS pixels."),H=h(),E=f("p"),oe=n("Okay, well, what does that mean? Again, ever helpful, WCAG allows"),T=h(),k=f("blockquote"),le=n("320 CSS pixels is equivalent to a starting viewport width of 1280 CSS pixels wide at 400% zoom. For web content which is designed to scroll horizontally (e.g., with vertical text), 256 CSS pixels is equivalent to a starting viewport height of 1024 CSS pixels at 400% zoom"),U=h(),q=f("p"),ie=n("Long and short seems to be that if you zoom your browser to 400%, text should \u201Creflow\u201D, that is, not require scrolling in more than one dimension, and not break in ways that reduce (or remove) legibility."),B=h(),y=f("p"),ae=n("The "),g=f("a"),se=n("\u201CUnderstanding\u201D"),ne=n(" page for this criterion is helpful. E.g. \u201CSpatial relationships of content may change when users zoom, but all information and functionality should continue to be available.\u201D"),O=h(),A=f("h3"),re=n("How to comply"),D=h(),P=f("p"),fe=n("It turns out that in many cases, if the website is built to be responsive at 100% zoom, it will also be responsive at 400% zoom. Increasing zoom kind of behaves as if your screen gets progressively smaller, and responsive breakpoints, being breakpoints, kick in and \u201Cautomatically\u201D reflow the content. Avoid fixed-width elements, and overly complex, overlapping arrangements and you\u2019re probably fine."),F=h(),I=f("p"),pe=n("But that alone won\u2019t help with 2x font-size increases. Read more about that in a future post."),this.h()},l(e){i=p(e,"H3",{});var o=u(i);d=r(o,"Reflow"),o.forEach(t),v=m(e),b=p(e,"P",{});var he=u(b);s=r(he,"I recently became aware of two WCAG Guidelines that sound similar, but are fundamentally different (and, to different degrees, challenging to achieve)."),he.forEach(t),c=m(e),w=p(e,"P",{});var K=u(w);M=r(K,"The first of these is the "),x=p(K,"A",{href:!0,rel:!0});var me=u(x);N=r(me,"\u201CReflow\u201D"),me.forEach(t),Q=r(K," requirement, namely that \u201Ccontent can be enlarged without increasing line length.\u201D"),K.forEach(t),L=m(e),z=p(e,"P",{});var ce=u(z);J=r(ce,"You might be wondering, as I did, what does that even mean?"),ce.forEach(t),R=m(e),C=p(e,"P",{});var we=u(C);X=r(we,"Perhaps the following criteria might help (or not):"),we.forEach(t),W=m(e),_=p(e,"UL",{});var V=u(_);$=p(V,"LI",{});var de=u($);Z=r(de,"Vertical scrolling content at a width equivalent to 320 CSS pixels"),de.forEach(t),ee=m(V),G=p(V,"LI",{});var ve=u(G);te=r(ve,"Horizontal scrolling content at a height equivalent to 256 CSS pixels."),ve.forEach(t),V.forEach(t),H=m(e),E=p(e,"P",{});var be=u(E);oe=r(be,"Okay, well, what does that mean? Again, ever helpful, WCAG allows"),be.forEach(t),T=m(e),k=p(e,"BLOCKQUOTE",{});var _e=u(k);le=r(_e,"320 CSS pixels is equivalent to a starting viewport width of 1280 CSS pixels wide at 400% zoom. For web content which is designed to scroll horizontally (e.g., with vertical text), 256 CSS pixels is equivalent to a starting viewport height of 1024 CSS pixels at 400% zoom"),_e.forEach(t),U=m(e),q=p(e,"P",{});var ye=u(q);ie=r(ye,"Long and short seems to be that if you zoom your browser to 400%, text should \u201Creflow\u201D, that is, not require scrolling in more than one dimension, and not break in ways that reduce (or remove) legibility."),ye.forEach(t),B=m(e),y=p(e,"P",{});var Y=u(y);ae=r(Y,"The "),g=p(Y,"A",{href:!0,rel:!0});var xe=u(g);se=r(xe,"\u201CUnderstanding\u201D"),xe.forEach(t),ne=r(Y," page for this criterion is helpful. E.g. \u201CSpatial relationships of content may change when users zoom, but all information and functionality should continue to be available.\u201D"),Y.forEach(t),O=m(e),A=p(e,"H3",{});var ge=u(A);re=r(ge,"How to comply"),ge.forEach(t),D=m(e),P=p(e,"P",{});var Se=u(P);fe=r(Se,"It turns out that in many cases, if the website is built to be responsive at 100% zoom, it will also be responsive at 400% zoom. Increasing zoom kind of behaves as if your screen gets progressively smaller, and responsive breakpoints, being breakpoints, kick in and \u201Cautomatically\u201D reflow the content. Avoid fixed-width elements, and overly complex, overlapping arrangements and you\u2019re probably fine."),Se.forEach(t),F=m(e),I=p(e,"P",{});var ze=u(I);pe=r(ze,"But that alone won\u2019t help with 2x font-size increases. Read more about that in a future post."),ze.forEach(t),this.h()},h(){j(x,"href","https://www.w3.org/TR/WCAG21/#reflow"),j(x,"rel","nofollow"),j(g,"href","https://www.w3.org/WAI/WCAG21/Understanding/reflow.html"),j(g,"rel","nofollow")},m(e,o){l(e,i,o),a(i,d),l(e,v,o),l(e,b,o),a(b,s),l(e,c,o),l(e,w,o),a(w,M),a(w,x),a(x,N),a(w,Q),l(e,L,o),l(e,z,o),a(z,J),l(e,R,o),l(e,C,o),a(C,X),l(e,W,o),l(e,_,o),a(_,$),a($,Z),a(_,ee),a(_,G),a(G,te),l(e,H,o),l(e,E,o),a(E,oe),l(e,T,o),l(e,k,o),a(k,le),l(e,U,o),l(e,q,o),a(q,ie),l(e,B,o),l(e,y,o),a(y,ae),a(y,g),a(g,se),a(y,ne),l(e,O,o),l(e,A,o),a(A,re),l(e,D,o),l(e,P,o),a(P,fe),l(e,F,o),l(e,I,o),a(I,pe)},p:Te,d(e){e&&t(i),e&&t(v),e&&t(b),e&&t(c),e&&t(w),e&&t(L),e&&t(z),e&&t(R),e&&t(C),e&&t(W),e&&t(_),e&&t(H),e&&t(E),e&&t(T),e&&t(k),e&&t(U),e&&t(q),e&&t(B),e&&t(y),e&&t(O),e&&t(A),e&&t(D),e&&t(P),e&&t(F),e&&t(I)}}}function Oe(S){let i,d;const v=[S[0],ke];let b={$$slots:{default:[Be]},$$scope:{ctx:S}};for(let s=0;s<v.length;s+=1)b=ue(b,v[s]);return i=new Ue({props:b}),{c(){Ie(i.$$.fragment)},l(s){$e(i.$$.fragment,s)},m(s,c){Ge(i,s,c),d=!0},p(s,[c]){const w=c&1?Le(v,[c&1&&Ce(s[0]),c&0&&Ce(ke)]):{};c&2&&(w.$$scope={dirty:c,ctx:s}),i.$set(w)},i(s){d||(Re(i.$$.fragment,s),d=!0)},o(s){We(i.$$.fragment,s),d=!1},d(s){He(i,s)}}}const ke={title:"Accessible websites at 400% browser zoom",date:"December 12, 2024",categories:["accessibility","CSS"]};function De(S,i,d){return S.$$set=v=>{d(0,i=ue(ue({},i),Ee(v)))},i=Ee(i),[i]}class Ve extends qe{constructor(i){super(),Ae(this,i,De,Oe,Pe,{})}}export{Ve as default,ke as metadata};
